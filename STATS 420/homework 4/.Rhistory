#solution
pt(1.3, df=7, lower.tail = FALSE)
#solution
pt(1.3, df=7, lower.tail = TRUE)
#solution
pt(1.3, df=7, lower.tail = FALSE)
#solution
qt(0.025,df=7, lower.tail = FALSE)
#solution
pt(2.364624,df=7, lower.tail = FALSE)
#solution
?trees
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
summary(lm)$Coefficients
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
summary(model_1)$Coefficients
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
summary(model_1)
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
(summary(model_1))$Coefficients
names(model_1)
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
names(model_1)
(summary(model_1))$coefficients
#solution
?trees
model_1 = lm(Girth ~ Height, data = trees)
names(model_1)
(summary(model_1))$coefficients[2,4]
#solution
confint(model_1, level = 0.90)
#solution
a = confint(model_1, level = 0.90)
a
#solution
a = confint(model_1, level = 0.90)
a
total_width = abs(a[1,1])+abs(a[1,2])
#solution
a = confint(model_1, level = 0.90)
a
total_width = abs(a[1,1])+abs(a[1,2])
total_width
#solution
predict(model_1, data.frame(Height=79), interval = "confidence", level = 0.95)
#solution
a = predict(model_1, data.frame(Height=79), interval = "confidence", level = 0.95)
l=a[2]
u=a[3]
bound=c(l,u)
#solution
a = predict(model_1, data.frame(Height=79), interval = "confidence", level = 0.95)
l=a[2]
u=a[3]
bound=c(l,u)
bound
#solution
a = predict(model_1, data.frame(Height=79), interval = "confidence", level = 0.95)
bound=c(a[2],a[3])
bound
#solution
?faithful
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
summary(model_2)$coeffiecients
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
names(summary(model_2))
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
names(summary(model_2))
(summary(model_2))$coefficients
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
names(summary(model_2))
(summary(model_2))$coefficients[2,2]
#solution
?faithful
model_2 = lm (eruptions ~ waiting, data = faithful)
names(summary(model_2))
std_err = (summary(model_2))$coefficients[2,2]
std_err
#solution
t = (((summary(model_2))$coefficients[2,1]) - 0 )/std_err
#solution
t = (((summary(model_2))$coefficients[2,1]) - 0 )/std_err
t
summary(model_2)
summary(model_2)
p_val = ((summary(model_2))$coefficients[2,4])
p_val
#solution
summary(model_2)$coefficients
#solution
summary(model_2)$coefficients[1,]
#solution
?faithful
head(faithful)
model_2 = lm (eruptions ~ waiting, data = faithful)
std_err = (summary(model_2))$coefficients[2,2]
std_err
#solution
t = (((summary(model_2))$coefficients[2,1]) - 0 )/std_err
t
length(faithful)
#solution
t = (((summary(model_2))$coefficients[2,1]) - 0 )/std_err
t
view(faithful)
#solution
t = (((summary(model_2))$coefficients[2,1]) - 0 )/std_err
t
View(faithful)
#solution
beta_0_hat = summary(model_2)$coefficients[1,1]
beta_0_err = summary(model_2)$coefficients[1,2]
t = qt(0.90, 270)
upper_b = beta_0_hat + (t*beta_0_err)
lower_b = beta_0_hat - (t*beta_0_err)
ci= c(lower_b, upper_b)
ci
#solution
summary(model_2)
beta_0_hat = summary(model_2)$coefficients[1,1]
beta_0_err = summary(model_2)$coefficients[1,2]
t = qt(0.90, 270)
upper_b = beta_0_hat + (t*beta_0_err)
lower_b = beta_0_hat - (t*beta_0_err)
ci= c(lower_b, upper_b)
ci
#solution
predict(model_2, data.frame(waiting=72), interval = "predict", level=0.99)
#solution
b = predict(model_2, data.frame(waiting=72), interval = "predict", level=0.99)
ans = c (b[2],b[3])
#solution
b = predict(model_2, data.frame(waiting=72), interval = "predict", level=0.99)
ans = c (b[2],b[3])
ans
#solution
qt(0.025,df=9, lower.tail = FALSE)
#solution
a = confint(model_1, level = 0.90)
a
total_width = abs(a[2,2])+abs(a[2,1])
total_width
#solution
a = confint(model_1, level = 0.90)
a
total_width = abs(a[2,2])-abs(a[2,1])
total_width
